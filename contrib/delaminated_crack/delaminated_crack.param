% Copyright (C) 2017-2020 Yves Renard.
%
% This file is a part of GetFEM++
%
% GetFEM++  is  free software;  you  can  redistribute  it  and/or modify it
% under  the  terms  of the  GNU  Lesser General Public License as published
% by  the  Free Software Foundation;  either version 3 of the License,  or
% (at your option) any later version along with the GCC Runtime Library
% Exception either version 3.1 or (at your option) any later version.
% This program  is  distributed  in  the  hope  that it will be useful,  but
% WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
% or  FITNESS  FOR  A PARTICULAR PURPOSE.  See the GNU Lesser General Public
% License and GCC Runtime Library Exception for more details.
% You  should  have received a copy of the GNU Lesser General Public License
% along  with  this program;  if not, write to the Free Software Foundation,
% Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA.
% -*- matlab -*- (enables emacs matlab mode)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program crack                                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%% pde parameters :	        				      %%%%%
% MU = 77.0;	        % Lamé coefficient.
% LAMBDA = 107.0;   	% Lamé coefficient.
MU = 1.0;	        % Lamé coefficient.
LAMBDA = 1.0;           % Lamé coefficient.
GC = 0.00000002;            % Fracture energy density
NEUMANN_FORCE = 0.0003; 
%%%%%   discretisation parameters  :                     	      %%%%%

QUAD = 1;

if (QUAD)
  MESH_FILE='structured:GT="GT_QK(3,1)";SIZES=[1,0.2,0.05];NOISED=0;NSUBDIV=[40,10,3]';
  FEM_TYPE = 'FEM_QK(3,1)';  % Q1 fem for quadrangles
  INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(3, 4)';
  % INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(3, 10)';
  % INTEGRATION = 'IM_STRUCTURED_COMPOSITE(IM_GAUSS_PARALLELEPIPED(3, 4), 4)';
else
  MESH_FILE='structured:GT="GT_PK(3,1)";SIZES=[1,0.5,0.2];NOISED=0;NSUBDIV=[10,5,3]';
  FEM_TYPE = 'FEM_PK(3,2)';  % P1 fem for tetrahedrons
  INTEGRATION = 'IM_TETRAHEDRON(6)';
  % INTEGRATION = 'IM_STRUCTURED_COMPOSITE(IM_TETRAHEDRON(6), 3)';
end

% integration meth. for sub-simplexe of elements crossed by the level-set
SIMPLEX_INTEGRATION = 'IM_STRUCTURED_COMPOSITE(IM_TETRAHEDRON(3),2)';

% integration meth. for quasi-polar integration of sub-simplexes adjascent to the level-set
% (comment it to disable quasipolar integration). Should be a
% method defined on a square for 2D, or defined on a prism for 3D.
% SINGULAR_INTEGRATION = 'IM_PRODUCT(IM_STRUCTURED_COMPOSITE(IM_TRIANGLE(6), 2), IM_STRUCTURED_COMPOSITE(IM_GAUSS1D(6), 2))';
SINGULAR_INTEGRATION = 'IM_PRODUCT(IM_TRIANGLE(6), IM_GAUSS1D(6))';

DIRICHLET_WITH_MULTIPLIERS = 2; % 0 = multipliers, 1 = penalized,
                                % 2 = eliminated.

IS_PRESCRIBED_DISPLACEMENT = 1;
PRESCRIBED_DISPLACEMENT = 0.1;

ENRICHMENT_OPTION = 1;  % 0 = no enrichment
		        % 1 = standard XFEM on a fixed zone


RADIUS_ENR_AREA = 0.1;

RESIDUAL = 1E-8;     	% residual for iterative methods if any.

%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'crack';     % Root of data files.
VTK_EXPORT = 2 % export solution to a .vtk file ?
