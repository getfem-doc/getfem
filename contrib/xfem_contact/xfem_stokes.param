% Copyright (C) 2017-2020 Yves Renard.
%
% This file is a part of GetFEM++
%
% GetFEM++  is  free software;  you  can  redistribute  it  and/or modify it
% under  the  terms  of the  GNU  Lesser General Public License as published
% by  the  Free Software Foundation;  either version 3 of the License,  or
% (at your option) any later version along with the GCC Runtime Library
% Exception either version 3.1 or (at your option) any later version.
% This program  is  distributed  in  the  hope  that it will be useful,  but
% WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
% or  FITNESS  FOR  A PARTICULAR PURPOSE.  See the GNU Lesser General Public
% License and GCC Runtime Library Exception for more details.
% You  should  have received a copy of the GNU Lesser General Public License
% along  with  this program;  if not, write to the Free Software Foundation,
% Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA.
% -*- matlab -*- (enables emacs matlab mode)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program xfem_dirichlet                                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

NU = 1.0;	        % Viscosity coefficient.

QUAD = 0;
N = 2;
RADIUS = 0.21;             % radius of the real circular domain.
LEVEL_SET_DEGREE = 2;      % Degree of the piecewise polynomial.
                           % defining the level set.
EXACT_SOL = 4;             % Which exact solution.
SIMPLIFY_LEVEL_SET = 0;
STABILIZED_DIRICHLET = 1;    % 0 = no, 1 = Barbosa-Hughes stab, 2 = fully stab.
MINIMAL_ELT_RATIO = 0.005;   % threshold ratio for the fully stab Dirichlet.
DIRICHLET_GAMMA0 = 0.01;     % Barbosa Hughes stabilization parameter
		   
OK = 0;

if (N == 1) 
  MESH_FILE='structured:GT="GT_PK(1,1)";SIZES=[1];NOISED=0;NSUBDIV=[10]';
  IM = 'IM_GAUSS1D(6)';     % Integration method.
  IM_SIMPLEX = IM;          % Integration method on sub-triangles.
  FEM = 'FEM_PK(1,1)';      % Finite element method for the unknown.
  FEM_RHS = FEM;            % Finite element method for the rhs
  FEM_MULT = 'FEM_PK(1,1)'; % Finite element method for multipliers
  OK = 1;
end;

if (N == 2 && QUAD)
  MESH_FILE='structured:GT="GT_QK(2,1)";SIZES=[1,1];NOISED=0;NSUBDIV=[40,40]';
  IM = 'IM_GAUSS_PARALLELEPIPED(2,6)';        % Integration method.
  IM_SIMPLEX = 'IM_STRUCTURED_COMPOSITE(IM_TRIANGLE(6),2)';   % Integration method on sub-triangles.
  FEM = 'FEM_QK(2,2)';      % Finite element method for the velocity u.
  FEM_RHS = 'FEM_QK(2,2)';     % Finite element method for the rhs
  FEM_p = 'FEM_QK(2,1)';      % Finite element method for the pressure p.
%  FEM = 'FEM_PRODUCT(FEM_PK_WITH_CUBIC_BUBBLE(1,1), FEM_PK_WITH_CUBIC_BUBBLE(1,1))';      % Finite element method for the unknown.
  FEM_MULT = 'FEM_QK(2,0)'; % Finite element method for multipliers
  OK = 1;
end;

if (N == 2 && ~QUAD)
  MESH_FILE='structured:GT="GT_PK(2,1)";SIZES=[1,1];NOISED=0;NSUBDIV=[20,20]';
%  IM = 'IM_HCT_COMPOSITE(IM_TRIANGLE(6))';
  IM = 'IM_STRUCTURED_COMPOSITE(IM_TRIANGLE(9),2)';    % Integration method.
  IM_SIMPLEX = 'IM_STRUCTURED_COMPOSITE(IM_TRIANGLE(9),2)';
  FEM =     'FEM_PK(2,2)';      % Finite element method for the velocity u.
  FEM_RHS = 'FEM_PK(2,2)';  % Finite element method for the rhs
  FEM_p =   'FEM_PK(2,1)';      % Finite element method for the pressure p.
  FEM_MULT = 'FEM_PK(2,1)'; % Finite element method for multipliers
  OK = 1;
end;

if (N == 3 && ~QUAD)
  MESH_FILE='structured:GT="GT_PK(3,1)";SIZES=[1,1,1];NOISED=0;NSUBDIV=[3,3,3]';
  IM = 'IM_STRUCTURED_COMPOSITE(IM_TETRAHEDRON(6),1)';    % Integration method.
  IM_SIMPLEX = 'IM_STRUCTURED_COMPOSITE(IM_TETRAHEDRON(6),1)'; 
  FEM = 'FEM_PK(3,2)';      % Finite element method for the unknown.
  FEM_RHS = FEM;            % Finite element method for the rhs
  FEM_MULT = 'FEM_PK(3,1)'; % Finite element method for multipliers
  FEM_MULT_DEGREE = 1;      % Degree for multipliers definition
   OK = 1;
end;

if (~OK)
  error ('Adapt the parameter file first');
end;


%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'xfem_dirichlet';     % Root of data files.
VTK_EXPORT = 2 % export solution to a .vtk file ?

%  FEM = 'FEM_PK_WITH_CUBIC_BUBBLE(2,1)';
%  FEM = 'FEM_P1_PIECEWISE_LINEAR_BUBBLE';