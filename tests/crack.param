% Copyright (C) 2017-2020 Yves Renard.
%
% This file is a part of GetFEM++
%
% GetFEM++  is  free software;  you  can  redistribute  it  and/or modify it
% under  the  terms  of the  GNU  Lesser General Public License as published
% by  the  Free Software Foundation;  either version 3 of the License,  or
% (at your option) any later version along with the GCC Runtime Library
% Exception either version 3.1 or (at your option) any later version.
% This program  is  distributed  in  the  hope  that it will be useful,  but
% WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
% or  FITNESS  FOR  A PARTICULAR PURPOSE.  See the GNU Lesser General Public
% License and GCC Runtime Library Exception for more details.
% You  should  have received a copy of the GNU Lesser General Public License
% along  with  this program;  if not, write to the Free Software Foundation,
% Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA.
% -*- matlab -*- (enables emacs matlab mode)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program crack                                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%% pde parameters :	        				      %%%%%
% MU = 77.0;	        % Lamé coefficient.
% LAMBDA = 107.0;   	% Lamé coefficient.

MU = 1.0;	        % Lamé coefficient.
LAMBDA = 1.0;           % Lamé coefficient.


QUAD = 0;


%%%%%   discretisation parameters  :                     	      %%%%%

if (~QUAD) 
  MESH_TYPE = 'GT_PK(2,1)';         % linear triangles
else
  % MESH_TYPE = 'GT_LINEAR_QK(2)';
  MESH_TYPE = 'GT_QK(2, 1)';
end;


NX = 10;            	% space step.
MODE = 1;               % Mode for the reference solution

MESH_NOISED = 0;	% Set to one if you want to "shake" the mesh



if (~QUAD)
  %FEM_TYPE = 'FEM_PK_WITH_CUBIC_BUBBLE(2, 2)';
  FEM_TYPE = 'FEM_PK(2, 1)';  % PK element
  DATA_FEM_TYPE = 'FEM_PK(2,1)';
  INTEGRATION = 'IM_STRUCTURED_COMPOSITE(IM_TRIANGLE(6), 5)';
  %INTEGRATION = 'IM_TRIANGLE(6)';
  FEM_TYPE_P = 'FEM_PK(2,1)';
  MORTAR_FEM_TYPE = FEM_TYPE;
else
  FEM_TYPE = 'FEM_QK(2,2)';  % Q1 fem for quadrangles
  DATA_FEM_TYPE = 'FEM_QK(2,2)';
  INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(2, 5)';
  FEM_TYPE_P = 'FEM_QK(2,1)'; 
  MORTAR_FEM_TYPE = FEM_TYPE;
end;


MIXED_PRESSURE=0;       % Mixed version or not.
DIRICHLET_VERSION = 0;  % 0 = multipliers, 1 = penalization

% integration meth. for sub-simplexe of elements crossed by the level-set
SIMPLEX_INTEGRATION = 'IM_STRUCTURED_COMPOSITE(IM_TRIANGLE(6),3)';

% integration meth. for quasi-polar integration of sub-simplexes adjascent to the level-set
% (comment it to disable quasipolar integration). Should be a
% method defined on a square for 2D, or defined on a prism for 3D.
% SINGULAR_INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(2, 10)';
SINGULAR_INTEGRATION = 'IM_STRUCTURED_COMPOSITE(IM_GAUSS_PARALLELEPIPED(2, 6), 9)';

ADDITIONAL_CRACK = 0;

%Enable the following two lines to use the precalculated solution as enrichement 
%GLOBAL_FUNCTION_MF = "crack.meshfem"
%GLOBAL_FUNCTION_U  = "crack.U"

ENRICHMENT_OPTION = 2;  % 0 = Pas d'enrichissement
	                % 1 = standard XFEM on a fixed zone
			% 2 = global functions with mortar junction
		        % 3 = global functions with cutoff
			% 4 = spider fem alone
	                % 5 = spider fem enrichment
VECTORIAL_ENRICHMENT = 1; % 1 = vectorial enrichment (2 dof) instead of
			  % enriching each components with 4 dofs.
			  % For global enrichment only.


RADIUS_ENR_AREA = 0.4;
CUTOFF_FUNC = 2; % 0 for the exponential cutoff. 
                 % 1 for a 3rd degree polynomial cutoff.
                 % 2 for a 5th degree polynomial cutoff. 
CUTOFF = 0.4;
CUTOFF1 = 0.01;
CUTOFF0 = 0.4;


RESIDUAL = 1E-9;     	% residual for iterative methods if any.

%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'crack';     % Root of data files.
VTK_EXPORT = 2 % export solution to a .vtk file ?