% Copyright (C) 2017-2020 Yves Renard.
%
% This file is a part of GetFEM++
%
% GetFEM++  is  free software;  you  can  redistribute  it  and/or modify it
% under  the  terms  of the  GNU  Lesser General Public License as published
% by  the  Free Software Foundation;  either version 3 of the License,  or
% (at your option) any later version along with the GCC Runtime Library
% Exception either version 3.1 or (at your option) any later version.
% This program  is  distributed  in  the  hope  that it will be useful,  but
% WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
% or  FITNESS  FOR  A PARTICULAR PURPOSE.  See the GNU Lesser General Public
% License and GCC Runtime Library Exception for more details.
% You  should  have received a copy of the GNU Lesser General Public License
% along  with  this program;  if not, write to the Free Software Foundation,
% Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for plasticity program                                       %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%% pde parameters :	        				      %%%%%
LX =100;   %100;   % size in X in mm.        %2.0; %1.0;		
LY =20; %20;   % size in Y in mm.        %0.5; %1.0;	       
LZ =20;   % size in Z in mm.        %0.5;
MU = 80769.; % Lamé coefficient in N/mm^2.	      % 385 Lamé coefficient.
LAMBDA = 121150.;  % Lamé coefficient in N/mm^2.      % 330 pour plane_stress, 577 pour plain_strain et 3D.

%LAMBDAT = 84605.;
%MUT = 77839.;

INCLINE = 0;            % Incline of the mesh.

%%%%%   discretisation parameters  :                     	      %%%%%
%MESH_TYPE = 'load';
%MESH_FILE = 'pde_elasto.mesh'; %'one_elt_.mesh';
MESH_TYPE = 'GT_PK(2,1)';         % linear triangles

%MESH_TYPE = 'GT_PK(3,1)';  

%MESH_TYPE = 'GT_PRISM(3,1)';     % 3D prisms
%MESH_TYPE = 'GT_QK(2,1)'; % linear rectangles


NX =25; %20 ; %5            	          % space step.
NY =10; %20 ; 
NZ =5 ;

MESH_NOISED = 0; % Set to one if you want to "shake" the mesh


%FEM_TYPE = 'FEM_PK(2,1)';  % P1 for triangles
FEM_TYPE = 'FEM_PK(2,2)'; % P2 for triangles
%FEM_TYPE = 'FEM_PK(3,2)';  % P2 for tetrahedrons 

%FEM_TYPE = 'FEM_QK(2,1)';  % Q1 fem for quadrangles
%FEM_TYPE = 'FEM_QK(2,2)';

FEM_TYPE_XI = 'FEM_PK_DISCONTINUOUS(2,2)'; 

DATA_FEM_TYPE = ''  %'FEM_PK_DISCONTINUOUS(2,0)';
% DATA_FEM_TYPE must be defined if your main FEM is not Lagrangian
%DATA_FEM_TYPE = 'FEM_PK(2,1)';

INTEGRATION = 'IM_TRIANGLE(6)'; % quadrature rule for polynomials up
                               % to degree 6 on triangles
%INTEGRATION = 'IM_TRIANGLE(1)';

%INTEGRATION = 'IM_TETRAHEDRON(5)';


%INTEGRATION = 'IM_EXACT_SIMPLEX(2)'; % exact integration on triangles
%INTEGRATION = 'IM_NC(2,6)';     % newton-cotes of degree 6 on triangles
%INTEGRATION = 'IM_NC_PARALLELEPIPED(2,6)'; % newton-cotes, degree 6,
                                          % quadrangles
%INTEGRATION = 'IM_NC_PRISM(3,12)'; % newton-cotes, degree 12, prims
%INTEGRATION = 'IM_GAUSS1D(10)'; % Gauss-Legendre integration on the
                               % segment of order 10
%INTEGRATION = 'IM_GAUSSLOBATTO1D(10)'; % Gauss-Lobatto-Legendre
                                      % integration on the segment
                                      % of order 10
%INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(2,10)'; % Product of two
                                              % IM_GAUSS1D(10) (for
                                              % quadrangles)
%INTEGRATION = 'IM_STRUCTURED_COMPOSITE(IM_GAUSS1D(5), 3)';
%INTEGRATION = 'IM_STRUCTURED_COMPOSITE(IM_TRIANGLE(7), 3)';


GENERIC_DIRICHLET = 0;  % Generic Dirichlet condition for non-lagrangian elts.

%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'plasticity';     % Root of data files.
EXPORT = 1;

%%%%%%%%%DONNEES SPECIFIQUEMENT PLASTIQUES

SIGMA_Y = 9000.;  % plasticity yield stress yield
RESIDUAL=1E-6;            % RESIDUAL for iterative solvers
OPTASCII=0;   % option for writing results : 0 for binary and other for ascii
FLAG_HYP=0;   % option for the calculation hypothesis : 1 for stress plane
              %                                other for classical 3D
              %             others to be defined, plane strain for instance 

FORCE=330;
