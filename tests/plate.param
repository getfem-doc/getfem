% Copyright (C) 2017-2020 Yves Renard.
%
% This file is a part of GetFEM++
%
% GetFEM++  is  free software;  you  can  redistribute  it  and/or modify it
% under  the  terms  of the  GNU  Lesser General Public License as published
% by  the  Free Software Foundation;  either version 3 of the License,  or
% (at your option) any later version along with the GCC Runtime Library
% Exception either version 3.1 or (at your option) any later version.
% This program  is  distributed  in  the  hope  that it will be useful,  but
% WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
% or  FITNESS  FOR  A PARTICULAR PURPOSE.  See the GNU Lesser General Public
% License and GCC Runtime Library Exception for more details.
% You  should  have received a copy of the GNU Lesser General Public License
% along  with  this program;  if not, write to the Free Software Foundation,
% Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA.


     
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% parameters for program plate                                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%% pde parameters :	      %%%%%
LX = 1.0 ;
LY = 1.0 ; 
LAMBDA = 1.0;   	% Lamé coefficient.
MU = 1.0;	        % Lamé coefficient.
EPSILON = 0.005;        % Thickness of the plate

%%%%% parameters for testing some analytical solutions :
 			
SOL_REF = 2;            % boundary conditions :
			% 0 = simple support on the vertical edges.
			%     valid if lambda = 0 
                        % 1 = Clamped on the vertical edges.
			%     valid if lambda = 0
                        % 2 = Clamped on the four edges 
			%     (solution u3 = sin^2(x)*sin^2(y)
			% 3 = Clamped on left vertical edge (CANTILEVER)
			%     valid if lambda = 0
			% 4 = simple support on four edges

STUDY_FLAG = 0 ;	% if equal to 1 then all the loadings applied are chosen
			% in order to have a maximum vertical displacement
                        % equal to 1.

PRESSURE = 0.0005;      % pressure on the top surface of the plate 
			% (only useful if SOL_REF = 0 or 1)  
			% will be multiplied by EPSILON^3.
			  
ETA = 1e-4;             % only useful if SOL_REF = 2 :
			% if eta  = 0 => solution of the Kirchhoff-Love model
			% if eta != 0 => solution of the Mindlin-Reissner model
			% To be taken of order epsilon^2 ?

N_Four = 100;           % only useful if SOL_REF = 4
			
%%%%% parameters for computation :

QUAD = 1;

NX = 20;                % number of element on an edge.
RESIDU = 1E-9;     	% residu for iterative methods.
MESH_NOISED = 0;        % Set to one if you want to "shake" the mesh

SOL_EXACTE = 0;
MITC = 1;

if (QUAD) %%%%% parameters for quadrangles

% MESH_TYPE = 'GT_LINEAR_QK(2)'; % linear rectangles
MESH_TYPE = 'GT_QK(2,1)'; % linear rectangles
FEM_TYPE_UT = 'FEM_QK(2,1)';
FEM_TYPE_U3 = 'FEM_QK(2,1)';
FEM_TYPE_THETA= 'FEM_QK(2,1)';

INTEGRATION = 'IM_GAUSS_PARALLELEPIPED(2, 10)';
INTEGRATION_CT = 'IM_GAUSS_PARALLELEPIPED(2, 1)';
% DATA_FEM_TYPE must be defined if your main FEM is not Lagrangian
 DATA_FEM_TYPE = 'FEM_QK(2,1)';
end;
	
if (~QUAD) %%%%% parameters for triangles

MESH_TYPE = 'GT_PK(2,1)';         % linear triangles
FEM_TYPE_UT = 'FEM_PK(2,1)';
FEM_TYPE_U3 = 'FEM_PK(2,1)';
FEM_TYPE_THETA = 'FEM_PK(2,1)';
% FEM_TYPE_U3 = 'FEM_PK_WITH_CUBIC_BUBBLE(2, 2)';
INTEGRATION = 'IM_TRIANGLE(6)';
INTEGRATION_CT = 'IM_TRIANGLE(6)';
% DATA_FEM_TYPE must be defined if your main FEM is not Lagrangian
 DATA_FEM_TYPE = 'FEM_PK(2,1)';
end;
%%%%% Other parameters

%%%%%   saving parameters                                             %%%%%
ROOTFILENAME = 'plate';     % Root of data files.
VTK_EXPORT = 1;             % export solution to a .vtk file ?
DX_EXPORT = 1;
SAUV = 1;